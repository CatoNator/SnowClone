//test comment, this is all ignored
int x = 0;
int y = 0;

int xspeed = 0;
int yspeed = 0;

//should be turned into a macro once that's done
//macro PlayerHeight 11;
int PlayerHeight = 11; //11px, in the penguin sprite

//gravity
//macro Gravity 0.32;

int Direction = 1;

int Landed = 0;

/*this is a comment*/
int AnimationIndex = 0;
float ImageIndex = 0.0;

/*this is a comment, it should be ignored
even in multiline form*/
func void Spawn()
{
	xspeed = 0;
	yspeed = 0;
}

func int FindFloorHeight()
{
	//no break statement yet
	int i = 0;
	
	//3 loops
	while (i < 3):
	{
		if (GetTileSolidityPoint(0, x, y + 16*i)):
			return GetTileFloorPoint(0, x, y + 16*i);
			
		i += 1;
	}
	
	//no floor found, so we'll just set an arbitrary value below the player
	return y + 128;
}

func void Update()
{
	int Floor = FindFloorHeight();
	
	if (y + PlayerHeight >= Floor - 2):
	{
		y = Floor - PlayerHeight;
		Landed = 1;
		yspeed = 0;
	}
	else
		Landed = 0;
	
	//horizontal movement
	if (IsButtonHeld(KEY_LEFT)):
	{
		xspeed = -2;
		Direction = -1;
	}
	else if (IsButtonHeld(KEY_RIGHT)):
	{
		xspeed = 2;
		Direction = 1;
	}
	else
		xspeed = 0;
	
	//jump
	if (IsButtonPressed(KEY_A) && Landed):
	{
		yspeed = -5;
		Landed = 0;
	}
	else if (IsButtonReleased(KEY_A) && Landed == 0 && yspeed < 0):
	{
		//stopping the jump
		yspeed = 0;
	}
	
	//shooting
	if (IsButtonPressed(KEY_B)):
	{
		entity bullet =SpawnEntity(x, y, enPlayerBullet);
		bullet->Direction = Direction;
	}
		
	if (Landed == 0 && yspeed < 7):
		yspeed += 0.32; //gravity value; this should be converted to a macro
	
	//quick animation code
	if (Landed == 0):
	{
		AnimationIndex = PlayerJump;
		ImageIndex = 0;
	}
	else if (xspeed != 0):
	{
		AnimationIndex = PlayerWalk;
		ImageIndex += 0.25;
	}
	else
	{
		AnimationIndex = PlayerIdle;
		ImageIndex = 0;
	}

	x += xspeed;
	y += yspeed;
	
	SetCameraPos(x, y);
}

func void Draw()
{
	//DrawSpriteExt(x, y, PlayerGunWalk, ImageIndex, 0, Direction, 1);
	DrawSpriteExt(x, y, AnimationIndex, ImageIndex, 0, Direction, 1);
}